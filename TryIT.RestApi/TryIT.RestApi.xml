<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TryIT.RestApi</name>
    </assembly>
    <members>
        <member name="T:TryIT.RestApi.Api">
            <summary>
            make a api call with retry
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Api.RetryResults">
            <summary>
            retry results, capture each response or exception
            </summary>
        </member>
        <member name="M:TryIT.RestApi.Api.#ctor(TryIT.RestApi.Models.HttpClientConfig)">
            <summary>
            init api instance with HttpClient configuration
            </summary>
            <param name="clientConfig"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:TryIT.RestApi.Api.GetBuilder(TryIT.RestApi.Models.RetryProperty)">
            <summary>
            get retry builder based on retry property
            </summary>
            <param name="retryProperty"></param>
            <returns></returns>
        </member>
        <member name="M:TryIT.RestApi.Api.AddExcetionData(System.Exception,System.String)">
            <summary>
            add extra data into exception
            <para>Uri</para>
            <para>Method</para>
            <para>RetryResults</para>
            </summary>
            <param name="ex"></param>
            <param name="url"></param>
        </member>
        <member name="M:TryIT.RestApi.Api.GetAsync(System.String)">
            <summary>
            call Get method
            </summary>
            <param name="url">url with or without parameters, if with parameters, the parameter key and value must UrlEncode</param>
            <returns></returns>
        </member>
        <member name="M:TryIT.RestApi.Api.GetAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            call Get method
            </summary>
            <param name="url">base url without parameters</param>
            <param name="parameters">url parameters</param>
            <returns></returns>
        </member>
        <member name="M:TryIT.RestApi.Api.PostAsync(System.String,System.Net.Http.HttpContent)">
            <summary>
            call Post method
            </summary>
            <param name="url"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:TryIT.RestApi.Api.PutAsync(System.String,System.Net.Http.HttpContent)">
            <summary>
            call Put method
            </summary>
            <param name="url"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:TryIT.RestApi.Api.PatchAsync(System.String,System.Net.Http.HttpContent)">
            <summary>
            call Patch method
            </summary>
            <param name="url"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:TryIT.RestApi.Api.DeleteAsync(System.String)">
            <summary>
            call Delete method
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:TryIT.RestApi.Api.WrapSendAsync(System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}},System.String,System.Net.Http.HttpMethod)">
            <summary>
            wrap send async with logging
            </summary>
            <param name="action"></param>
            <param name="url"></param>
            <param name="httpMethod"></param>
            <returns></returns>
        </member>
        <member name="T:TryIT.RestApi.Models.BasicAuth">
            <summary>
            basic auth proper
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.BasicAuth.Username">
            <summary>
            username for Basic Authorization, if provided will use Basic Authorization
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.BasicAuth.Password">
            <summary>
            password for Basic Authorization, if provided will use Basic Authorization
            </summary>
        </member>
        <member name="T:TryIT.RestApi.Models.HttpLogDelegate">
            <summary>
            Delegate for logging HTTP request and response details.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:TryIT.RestApi.Models.HttpLogContext">
            <summary>
            Http log context for logging request and response details.
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.HttpLogContext.CorrelationId">
            <summary>
            Unique identifier to correlate logs across a request chain.
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.HttpLogContext.Stage">
            <summary>
            Indicates which stage of the HTTP lifecycle this log represents.
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.HttpLogContext.Method">
            <summary>
            The HTTP method (GET, POST, DELETE, etc.)
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.HttpLogContext.Url">
            <summary>
            The request URL
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.HttpLogContext.Response">
            <summary>
            The HTTP response (if available)
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.HttpLogContext.Exception">
            <summary>
            The exception that occurred (if any)
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.HttpLogContext.StartTimeUtc">
            <summary>
            The UTC time when the request started
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.HttpLogContext.EndTimeUtc">
            <summary>
            The UTC time when the request completed (success or failure)
            </summary>
        </member>
        <member name="T:TryIT.RestApi.Models.LogStage">
            <summary>
            Represents the stage of the HTTP request lifecycle for logging purposes.
            </summary>
        </member>
        <member name="F:TryIT.RestApi.Models.LogStage.BeforeRequest">
            <summary>
            Occurs before the HTTP request is sent.
            Useful for logging request URL, headers, and payload.
            </summary>
        </member>
        <member name="F:TryIT.RestApi.Models.LogStage.AfterResponse">
            <summary>
            Occurs after a successful HTTP response is received.
            Useful for logging response status code, headers, and content.
            </summary>
        </member>
        <member name="F:TryIT.RestApi.Models.LogStage.OnError">
            <summary>
            Occurs when an exception is thrown during the request or response handling.
            Useful for logging errors, stack traces, and diagnostic context.
            </summary>
        </member>
        <member name="T:TryIT.RestApi.Models.HttpClientConfig">
            <summary>
            
            </summary>
        </member>
        <member name="M:TryIT.RestApi.Models.HttpClientConfig.#ctor">
            <summary>
            initialize the HttpClientConfig with defualt values
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.HttpClientConfig.HttpClient">
            <summary>
            httpClient to use for the request, if provided will use this httpClient and <see cref="P:TryIT.RestApi.Models.HttpClientConfig.Proxy"/> will be ignored
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.HttpClientConfig.RetryProperty">
            <summary>
            retry property for the request when meet the condition
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.HttpClientConfig.BasicAuth">
            <summary>
            basic auth for the request
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.HttpClientConfig.Proxy">
            <summary>
            proxy for the request, this will not be use if the <see cref="P:TryIT.RestApi.Models.HttpClientConfig.HttpClient"/> is set
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.HttpClientConfig.Headers">
            <summary>
            headers to add to the request
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.HttpClientConfig.TimeoutSecond">
            <summary>
            determine request timeout second, default is 100 seconds, https://learn.microsoft.com/en-us/dotnet/api/system.net.http.httpclient.timeout?view=net-7.0
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.HttpClientConfig.securityProtocolType">
            <summary>
            default use <see cref="F:System.Net.SecurityProtocolType.Tls12"/> for more secure
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.HttpClientConfig.HttpLogDelegate">
            <summary>
            Optional async logger delegate, allows external caller to log request/response.
            </summary>
        </member>
        <member name="T:TryIT.RestApi.Models.ProxyConfig">
            <summary>
            proxy config for the api
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.ProxyConfig.Url">
            <summary>
            Url for proxy server
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.ProxyConfig.Username">
            <summary>
            Username for connect to proxy, if empty will set <see cref="P:System.Net.WebProxy.UseDefaultCredentials"/> to true
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.ProxyConfig.Password">
            <summary>
            Password for connect to proxy
            </summary>
        </member>
        <member name="T:TryIT.RestApi.Models.RetryProperty">
            <summary>
            retry property for the api
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.RetryProperty.RetryStatusCodes">
            <summary>
            the status codes that will be retried
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.RetryProperty.RetryExceptions">
            <summary>
            the exceptions that will be retried, this only applicable for GET method
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.RetryProperty.RetryCount">
            <summary>
            number of retry times, default 3 times
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.RetryProperty.RetryDelay">
            <summary>
            delay between each retry, default 1 second
            </summary>
        </member>
        <member name="T:TryIT.RestApi.Models.RetryExceptionConfig">
            <summary>
            exception config for retry
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.RetryExceptionConfig.ExceptionType">
            <summary>
            E.g., typeof(HttpRequestException)
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.RetryExceptionConfig.MessageKeyword">
            <summary>
            E.g., "SSL connection"
            </summary>
        </member>
        <member name="T:TryIT.RestApi.Models.RetryResult">
            <summary>
            retry result
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.RetryResult.AttemptNumber">
            <summary>
            number of retry
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.RetryResult.Timestamp">
            <summary>
            timestamp of the retry
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.RetryResult.Result">
            <summary>
            response message for each retry
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.RetryResult.Exception">
            <summary>
            exception for each retry
            </summary>
        </member>
        <member name="T:TryIT.RestApi.Models.ResultMessage">
            <summary>
            retry attempt result
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.ResultMessage.StatusCode">
            <summary>
            the status code of the response
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.ResultMessage.ReasonPhrase">
            <summary>
            the reason phrase of the response
            </summary>
        </member>
        <member name="P:TryIT.RestApi.Models.ResultMessage.RequestUri">
            <summary>
            the uri of the request
            </summary>
        </member>
    </members>
</doc>
